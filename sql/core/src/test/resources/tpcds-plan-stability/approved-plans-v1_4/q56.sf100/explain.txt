== Physical Plan ==
TakeOrderedAndProject (76)
+- * HashAggregate (75)
   +- Exchange (74)
      +- * HashAggregate (73)
         +- Union (72)
            :- * HashAggregate (32)
            :  +- Exchange (31)
            :     +- * HashAggregate (30)
            :        +- * Project (29)
            :           +- * BroadcastHashJoin Inner BuildRight (28)
            :              :- * Project (17)
            :              :  +- * BroadcastHashJoin Inner BuildRight (16)
            :              :     :- * Project (10)
            :              :     :  +- * BroadcastHashJoin Inner BuildRight (9)
            :              :     :     :- * Filter (3)
            :              :     :     :  +- * ColumnarToRow (2)
            :              :     :     :     +- Scan parquet default.store_sales (1)
            :              :     :     +- BroadcastExchange (8)
            :              :     :        +- * Project (7)
            :              :     :           +- * Filter (6)
            :              :     :              +- * ColumnarToRow (5)
            :              :     :                 +- Scan parquet default.date_dim (4)
            :              :     +- BroadcastExchange (15)
            :              :        +- * Project (14)
            :              :           +- * Filter (13)
            :              :              +- * ColumnarToRow (12)
            :              :                 +- Scan parquet default.customer_address (11)
            :              +- BroadcastExchange (27)
            :                 +- * BroadcastHashJoin LeftSemi BuildRight (26)
            :                    :- * Filter (20)
            :                    :  +- * ColumnarToRow (19)
            :                    :     +- Scan parquet default.item (18)
            :                    +- BroadcastExchange (25)
            :                       +- * Project (24)
            :                          +- * Filter (23)
            :                             +- * ColumnarToRow (22)
            :                                +- Scan parquet default.item (21)
            :- * HashAggregate (56)
            :  +- Exchange (55)
            :     +- * HashAggregate (54)
            :        +- * Project (53)
            :           +- * BroadcastHashJoin Inner BuildRight (52)
            :              :- * Project (41)
            :              :  +- * BroadcastHashJoin Inner BuildRight (40)
            :              :     :- * Project (38)
            :              :     :  +- * BroadcastHashJoin Inner BuildRight (37)
            :              :     :     :- * Filter (35)
            :              :     :     :  +- * ColumnarToRow (34)
            :              :     :     :     +- Scan parquet default.catalog_sales (33)
            :              :     :     +- ReusedExchange (36)
            :              :     +- ReusedExchange (39)
            :              +- BroadcastExchange (51)
            :                 +- * BroadcastHashJoin LeftSemi BuildRight (50)
            :                    :- * Filter (44)
            :                    :  +- * ColumnarToRow (43)
            :                    :     +- Scan parquet default.item (42)
            :                    +- BroadcastExchange (49)
            :                       +- * Project (48)
            :                          +- * Filter (47)
            :                             +- * ColumnarToRow (46)
            :                                +- Scan parquet default.item (45)
            +- * HashAggregate (71)
               +- Exchange (70)
                  +- * HashAggregate (69)
                     +- * Project (68)
                        +- * BroadcastHashJoin Inner BuildRight (67)
                           :- * Project (65)
                           :  +- * BroadcastHashJoin Inner BuildRight (64)
                           :     :- * Project (62)
                           :     :  +- * BroadcastHashJoin Inner BuildRight (61)
                           :     :     :- * Filter (59)
                           :     :     :  +- * ColumnarToRow (58)
                           :     :     :     +- Scan parquet default.web_sales (57)
                           :     :     +- ReusedExchange (60)
                           :     +- ReusedExchange (63)
                           +- ReusedExchange (66)


(1) Scan parquet default.store_sales
Output [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#4), dynamicpruningexpression(ss_sold_date_sk#4 IN dynamicpruning#5)]
PushedFilters: [IsNotNull(ss_addr_sk), IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>

(2) ColumnarToRow [codegen id : 5]
Input [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]

(3) Filter [codegen id : 5]
Input [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
Condition : (isnotnull(ss_addr_sk#2) AND isnotnull(ss_item_sk#1))

(4) Scan parquet default.date_dim
Output [3]: [d_date_sk#6, d_year#7, d_moy#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,2), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(5) ColumnarToRow [codegen id : 1]
Input [3]: [d_date_sk#6, d_year#7, d_moy#8]

(6) Filter [codegen id : 1]
Input [3]: [d_date_sk#6, d_year#7, d_moy#8]
Condition : ((((isnotnull(d_year#7) AND isnotnull(d_moy#8)) AND (d_year#7 = 2001)) AND (d_moy#8 = 2)) AND isnotnull(d_date_sk#6))

(7) Project [codegen id : 1]
Output [1]: [d_date_sk#6]
Input [3]: [d_date_sk#6, d_year#7, d_moy#8]

(8) BroadcastExchange
Input [1]: [d_date_sk#6]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#9]

(9) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ss_sold_date_sk#4]
Right keys [1]: [d_date_sk#6]
Join condition: None

(10) Project [codegen id : 5]
Output [3]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3]
Input [5]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4, d_date_sk#6]

(11) Scan parquet default.customer_address
Output [2]: [ca_address_sk#10, ca_gmt_offset#11]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-5.00), IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>

(12) ColumnarToRow [codegen id : 2]
Input [2]: [ca_address_sk#10, ca_gmt_offset#11]

(13) Filter [codegen id : 2]
Input [2]: [ca_address_sk#10, ca_gmt_offset#11]
Condition : ((isnotnull(ca_gmt_offset#11) AND (ca_gmt_offset#11 = -5.00)) AND isnotnull(ca_address_sk#10))

(14) Project [codegen id : 2]
Output [1]: [ca_address_sk#10]
Input [2]: [ca_address_sk#10, ca_gmt_offset#11]

(15) BroadcastExchange
Input [1]: [ca_address_sk#10]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [id=#12]

(16) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ss_addr_sk#2]
Right keys [1]: [ca_address_sk#10]
Join condition: None

(17) Project [codegen id : 5]
Output [2]: [ss_item_sk#1, ss_ext_sales_price#3]
Input [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ca_address_sk#10]

(18) Scan parquet default.item
Output [2]: [i_item_sk#13, i_item_id#14]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string>

(19) ColumnarToRow [codegen id : 4]
Input [2]: [i_item_sk#13, i_item_id#14]

(20) Filter [codegen id : 4]
Input [2]: [i_item_sk#13, i_item_id#14]
Condition : isnotnull(i_item_sk#13)

(21) Scan parquet default.item
Output [2]: [i_item_id#14, i_color#15]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [In(i_color, [slate               ,blanched            ,burnished           ])]
ReadSchema: struct<i_item_id:string,i_color:string>

(22) ColumnarToRow [codegen id : 3]
Input [2]: [i_item_id#14, i_color#15]

(23) Filter [codegen id : 3]
Input [2]: [i_item_id#14, i_color#15]
Condition : i_color#15 IN (slate               ,blanched            ,burnished           )

(24) Project [codegen id : 3]
Output [1]: [i_item_id#14 AS i_item_id#14#16]
Input [2]: [i_item_id#14, i_color#15]

(25) BroadcastExchange
Input [1]: [i_item_id#14#16]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [id=#17]

(26) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [i_item_id#14]
Right keys [1]: [i_item_id#14#16]
Join condition: None

(27) BroadcastExchange
Input [2]: [i_item_sk#13, i_item_id#14]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#18]

(28) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ss_item_sk#1]
Right keys [1]: [i_item_sk#13]
Join condition: None

(29) Project [codegen id : 5]
Output [2]: [ss_ext_sales_price#3, i_item_id#14]
Input [4]: [ss_item_sk#1, ss_ext_sales_price#3, i_item_sk#13, i_item_id#14]

(30) HashAggregate [codegen id : 5]
Input [2]: [ss_ext_sales_price#3, i_item_id#14]
Keys [1]: [i_item_id#14]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#3))]
Aggregate Attributes [1]: [sum#19]
Results [2]: [i_item_id#14, sum#20]

(31) Exchange
Input [2]: [i_item_id#14, sum#20]
Arguments: hashpartitioning(i_item_id#14, 5), ENSURE_REQUIREMENTS, [id=#21]

(32) HashAggregate [codegen id : 6]
Input [2]: [i_item_id#14, sum#20]
Keys [1]: [i_item_id#14]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#3))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#3))#22]
Results [2]: [i_item_id#14, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#3))#22,17,2) AS total_sales#23]

(33) Scan parquet default.catalog_sales
Output [4]: [cs_bill_addr_sk#24, cs_item_sk#25, cs_ext_sales_price#26, cs_sold_date_sk#27]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#27), dynamicpruningexpression(cs_sold_date_sk#27 IN dynamicpruning#5)]
PushedFilters: [IsNotNull(cs_bill_addr_sk), IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>

(34) ColumnarToRow [codegen id : 11]
Input [4]: [cs_bill_addr_sk#24, cs_item_sk#25, cs_ext_sales_price#26, cs_sold_date_sk#27]

(35) Filter [codegen id : 11]
Input [4]: [cs_bill_addr_sk#24, cs_item_sk#25, cs_ext_sales_price#26, cs_sold_date_sk#27]
Condition : (isnotnull(cs_bill_addr_sk#24) AND isnotnull(cs_item_sk#25))

(36) ReusedExchange [Reuses operator id: 8]
Output [1]: [d_date_sk#28]

(37) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_sold_date_sk#27]
Right keys [1]: [d_date_sk#28]
Join condition: None

(38) Project [codegen id : 11]
Output [3]: [cs_bill_addr_sk#24, cs_item_sk#25, cs_ext_sales_price#26]
Input [5]: [cs_bill_addr_sk#24, cs_item_sk#25, cs_ext_sales_price#26, cs_sold_date_sk#27, d_date_sk#28]

(39) ReusedExchange [Reuses operator id: 15]
Output [1]: [ca_address_sk#29]

(40) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_bill_addr_sk#24]
Right keys [1]: [ca_address_sk#29]
Join condition: None

(41) Project [codegen id : 11]
Output [2]: [cs_item_sk#25, cs_ext_sales_price#26]
Input [4]: [cs_bill_addr_sk#24, cs_item_sk#25, cs_ext_sales_price#26, ca_address_sk#29]

(42) Scan parquet default.item
Output [2]: [i_item_sk#30, i_item_id#31]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string>

(43) ColumnarToRow [codegen id : 10]
Input [2]: [i_item_sk#30, i_item_id#31]

(44) Filter [codegen id : 10]
Input [2]: [i_item_sk#30, i_item_id#31]
Condition : isnotnull(i_item_sk#30)

(45) Scan parquet default.item
Output [2]: [i_item_id#14, i_color#15]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [In(i_color, [slate               ,blanched            ,burnished           ])]
ReadSchema: struct<i_item_id:string,i_color:string>

(46) ColumnarToRow [codegen id : 9]
Input [2]: [i_item_id#14, i_color#15]

(47) Filter [codegen id : 9]
Input [2]: [i_item_id#14, i_color#15]
Condition : i_color#15 IN (slate               ,blanched            ,burnished           )

(48) Project [codegen id : 9]
Output [1]: [i_item_id#14]
Input [2]: [i_item_id#14, i_color#15]

(49) BroadcastExchange
Input [1]: [i_item_id#14]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [id=#32]

(50) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [i_item_id#31]
Right keys [1]: [i_item_id#14]
Join condition: None

(51) BroadcastExchange
Input [2]: [i_item_sk#30, i_item_id#31]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#33]

(52) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_item_sk#25]
Right keys [1]: [i_item_sk#30]
Join condition: None

(53) Project [codegen id : 11]
Output [2]: [cs_ext_sales_price#26, i_item_id#31]
Input [4]: [cs_item_sk#25, cs_ext_sales_price#26, i_item_sk#30, i_item_id#31]

(54) HashAggregate [codegen id : 11]
Input [2]: [cs_ext_sales_price#26, i_item_id#31]
Keys [1]: [i_item_id#31]
Functions [1]: [partial_sum(UnscaledValue(cs_ext_sales_price#26))]
Aggregate Attributes [1]: [sum#34]
Results [2]: [i_item_id#31, sum#35]

(55) Exchange
Input [2]: [i_item_id#31, sum#35]
Arguments: hashpartitioning(i_item_id#31, 5), ENSURE_REQUIREMENTS, [id=#36]

(56) HashAggregate [codegen id : 12]
Input [2]: [i_item_id#31, sum#35]
Keys [1]: [i_item_id#31]
Functions [1]: [sum(UnscaledValue(cs_ext_sales_price#26))]
Aggregate Attributes [1]: [sum(UnscaledValue(cs_ext_sales_price#26))#37]
Results [2]: [i_item_id#31, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#26))#37,17,2) AS total_sales#38]

(57) Scan parquet default.web_sales
Output [4]: [ws_item_sk#39, ws_bill_addr_sk#40, ws_ext_sales_price#41, ws_sold_date_sk#42]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#42), dynamicpruningexpression(ws_sold_date_sk#42 IN dynamicpruning#5)]
PushedFilters: [IsNotNull(ws_bill_addr_sk), IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>

(58) ColumnarToRow [codegen id : 17]
Input [4]: [ws_item_sk#39, ws_bill_addr_sk#40, ws_ext_sales_price#41, ws_sold_date_sk#42]

(59) Filter [codegen id : 17]
Input [4]: [ws_item_sk#39, ws_bill_addr_sk#40, ws_ext_sales_price#41, ws_sold_date_sk#42]
Condition : (isnotnull(ws_bill_addr_sk#40) AND isnotnull(ws_item_sk#39))

(60) ReusedExchange [Reuses operator id: 8]
Output [1]: [d_date_sk#43]

(61) BroadcastHashJoin [codegen id : 17]
Left keys [1]: [ws_sold_date_sk#42]
Right keys [1]: [d_date_sk#43]
Join condition: None

(62) Project [codegen id : 17]
Output [3]: [ws_item_sk#39, ws_bill_addr_sk#40, ws_ext_sales_price#41]
Input [5]: [ws_item_sk#39, ws_bill_addr_sk#40, ws_ext_sales_price#41, ws_sold_date_sk#42, d_date_sk#43]

(63) ReusedExchange [Reuses operator id: 15]
Output [1]: [ca_address_sk#44]

(64) BroadcastHashJoin [codegen id : 17]
Left keys [1]: [ws_bill_addr_sk#40]
Right keys [1]: [ca_address_sk#44]
Join condition: None

(65) Project [codegen id : 17]
Output [2]: [ws_item_sk#39, ws_ext_sales_price#41]
Input [4]: [ws_item_sk#39, ws_bill_addr_sk#40, ws_ext_sales_price#41, ca_address_sk#44]

(66) ReusedExchange [Reuses operator id: 51]
Output [2]: [i_item_sk#45, i_item_id#46]

(67) BroadcastHashJoin [codegen id : 17]
Left keys [1]: [ws_item_sk#39]
Right keys [1]: [i_item_sk#45]
Join condition: None

(68) Project [codegen id : 17]
Output [2]: [ws_ext_sales_price#41, i_item_id#46]
Input [4]: [ws_item_sk#39, ws_ext_sales_price#41, i_item_sk#45, i_item_id#46]

(69) HashAggregate [codegen id : 17]
Input [2]: [ws_ext_sales_price#41, i_item_id#46]
Keys [1]: [i_item_id#46]
Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#41))]
Aggregate Attributes [1]: [sum#47]
Results [2]: [i_item_id#46, sum#48]

(70) Exchange
Input [2]: [i_item_id#46, sum#48]
Arguments: hashpartitioning(i_item_id#46, 5), ENSURE_REQUIREMENTS, [id=#49]

(71) HashAggregate [codegen id : 18]
Input [2]: [i_item_id#46, sum#48]
Keys [1]: [i_item_id#46]
Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#41))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_ext_sales_price#41))#50]
Results [2]: [i_item_id#46, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#41))#50,17,2) AS total_sales#51]

(72) Union

(73) HashAggregate [codegen id : 19]
Input [2]: [i_item_id#14, total_sales#23]
Keys [1]: [i_item_id#14]
Functions [1]: [partial_sum(total_sales#23)]
Aggregate Attributes [2]: [sum#52, isEmpty#53]
Results [3]: [i_item_id#14, sum#54, isEmpty#55]

(74) Exchange
Input [3]: [i_item_id#14, sum#54, isEmpty#55]
Arguments: hashpartitioning(i_item_id#14, 5), ENSURE_REQUIREMENTS, [id=#56]

(75) HashAggregate [codegen id : 20]
Input [3]: [i_item_id#14, sum#54, isEmpty#55]
Keys [1]: [i_item_id#14]
Functions [1]: [sum(total_sales#23)]
Aggregate Attributes [1]: [sum(total_sales#23)#57]
Results [2]: [i_item_id#14, sum(total_sales#23)#57 AS total_sales#58]

(76) TakeOrderedAndProject
Input [2]: [i_item_id#14, total_sales#58]
Arguments: 100, [total_sales#58 ASC NULLS FIRST], [i_item_id#14, total_sales#58]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#4 IN dynamicpruning#5
ReusedExchange (77)


(77) ReusedExchange [Reuses operator id: 8]
Output [1]: [d_date_sk#6]

Subquery:2 Hosting operator id = 33 Hosting Expression = cs_sold_date_sk#27 IN dynamicpruning#5

Subquery:3 Hosting operator id = 57 Hosting Expression = ws_sold_date_sk#42 IN dynamicpruning#5


